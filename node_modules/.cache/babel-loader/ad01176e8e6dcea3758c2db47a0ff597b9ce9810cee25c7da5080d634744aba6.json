{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uD64D\\uC11D\\uD604\\\\\\uAC1C\\uC778\\uD504\\uB85C\\uC81D\\uD2B8\\\\react-calendar\\\\src\\\\comp\\\\calendar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(Calendar, {\n  onChange: onChange // useState로 포커스 변경 시 현재 날짜 받아오기\n  ,\n  formatDay: (locale, date) => moment(date).format(\"DD\") // 날'일' 제외하고 숫자만 보이도록 설정\n  ,\n  value: value,\n  minDetail: \"month\" // 상단 네비게이션에서 '월' 단위만 보이게 설정\n  ,\n  maxDetail: \"month\" // 상단 네비게이션에서 '월' 단위만 보이게 설정\n  ,\n  navigationLabel: null,\n  showNeighboringMonth: false //  이전, 이후 달의 날짜는 보이지 않도록 설정\n  ,\n  className: \"mx-auto w-full text-sm border-b\",\n  tileContent: ({\n    date,\n    view\n  }) => {\n    // 날짜 타일에 컨텐츠 추가하기 (html 태그)\n    // 추가할 html 태그를 변수 초기화\n    let html = [];\n    // 현재 날짜가 post 작성한 날짜 배열(mark)에 있다면, dot div 추가\n    if (mark.find(x => x === moment(date).format(\"YYYY-MM-DD\"))) {\n      html.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this));\n    }\n    // 다른 조건을 주어서 html.push 에 추가적인 html 태그를 적용할 수 있음.\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center absoluteDiv\",\n        children: html\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 1,\n  columnNumber: 1\n}, this);","map":{"version":3,"names":["_jsxDEV","Calendar","onChange","formatDay","locale","date","moment","format","value","minDetail","maxDetail","navigationLabel","showNeighboringMonth","className","tileContent","view","html","mark","find","x","push","fileName","_jsxFileName","lineNumber","columnNumber","_Fragment","children"],"sources":["D:/홍석현/개인프로젝트/react-calendar/src/comp/calendar.js"],"sourcesContent":["<Calendar\r\n  onChange={onChange} // useState로 포커스 변경 시 현재 날짜 받아오기\r\n  formatDay={(locale, date) => moment(date).format(\"DD\")} // 날'일' 제외하고 숫자만 보이도록 설정\r\n  value={value}\r\n  minDetail=\"month\" // 상단 네비게이션에서 '월' 단위만 보이게 설정\r\n  maxDetail=\"month\" // 상단 네비게이션에서 '월' 단위만 보이게 설정\r\n  navigationLabel={null}\r\n  showNeighboringMonth={false} //  이전, 이후 달의 날짜는 보이지 않도록 설정\r\n  className=\"mx-auto w-full text-sm border-b\"\r\n  tileContent={({ date, view }) => { // 날짜 타일에 컨텐츠 추가하기 (html 태그)\r\n    // 추가할 html 태그를 변수 초기화\r\n    let html = [];\r\n    // 현재 날짜가 post 작성한 날짜 배열(mark)에 있다면, dot div 추가\r\n    if (mark.find((x) => x === moment(date).format(\"YYYY-MM-DD\"))) {\r\n      html.push(<div className=\"dot\"></div>);\r\n    }\r\n    // 다른 조건을 주어서 html.push 에 추가적인 html 태그를 적용할 수 있음.\r\n    return (\r\n      <>\r\n        <div className=\"flex justify-center items-center absoluteDiv\">\r\n          {html}\r\n        </div>\r\n      </>\r\n    );\r\n  }}\r\n/>"],"mappings":";;;AAAA,aAAAA,OAAA,CAACC,QAAQ;EACPC,QAAQ,EAAEA,QAAS,CAAC;EAAA;EACpBC,SAAS,EAAEA,CAACC,MAAM,EAAEC,IAAI,KAAKC,MAAM,CAACD,IAAI,CAAC,CAACE,MAAM,CAAC,IAAI,CAAE,CAAC;EAAA;EACxDC,KAAK,EAAEA,KAAM;EACbC,SAAS,EAAC,OAAO,CAAC;EAAA;EAClBC,SAAS,EAAC,OAAO,CAAC;EAAA;EAClBC,eAAe,EAAE,IAAK;EACtBC,oBAAoB,EAAE,KAAM,CAAC;EAAA;EAC7BC,SAAS,EAAC,iCAAiC;EAC3CC,WAAW,EAAEA,CAAC;IAAET,IAAI;IAAEU;EAAK,CAAC,KAAK;IAAE;IACjC;IACA,IAAIC,IAAI,GAAG,EAAE;IACb;IACA,IAAIC,IAAI,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,KAAKb,MAAM,CAACD,IAAI,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MAC7DS,IAAI,CAACI,IAAI,eAACpB,OAAA;QAAKa,SAAS,EAAC;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,CAAC;IACxC;IACA;IACA,oBACExB,OAAA,CAAAyB,SAAA;MAAAC,QAAA,eACE1B,OAAA;QAAKa,SAAS,EAAC,8CAA8C;QAAAa,QAAA,EAC1DV;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC,gBACN,CAAC;EAEP;AAAE;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}